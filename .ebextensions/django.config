packages:
    yum:
        git: []
        nodejs: []

commands:
    #Install node
    01_npm_download:
      command: 'yum install -y nodejs --enablerepo=epel'

option_settings:
    "aws:elasticbeanstalk:application:environment":
        # your settings module here
        DJANGO_SETTINGS_MODULE: "backend.settings" 
        
        # add the path to the root of the django app
        PYTHONPATH: "/opt/python/current/app/backend:$PYTHONPATH"
        
    "aws:elasticbeanstalk:container:python":
        # path to the wsgi.py file from the root folder of the application
        WSGIPath: backend/backend/wsgi.py
        NumProcesses: 3 
        NumThreads: 20
        
    "aws:elasticbeanstalk:container:python:staticfiles":
        "/static/": "static/"

# These commands run just before the deployment finishes
container_commands:
    01_migrate:
        command: 'python backend/manage.py migrate --noinput'
        leader_only: true

    02_createadmin:
        command: echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@myproject.com', 'password')" | python manage.py shell
        leader_only: true
    
    # You can define a build script in packages.json (using gulp, grunt...) to build your client side files
    03_npm_build:
        command: 'cd frontend && npm install && npm run build'
        
    04_collectstatic:
        command: 'python backend/manage.py collectstatic'